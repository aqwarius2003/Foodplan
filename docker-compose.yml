version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    container_name: foodplan-web
    restart: always
    depends_on:
      - db
      - redis
    environment:
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB:-foodplan}
      - REDIS_URL=redis://redis:6379/0
      - YOOKASSA_SHOP_ID=${YOOKASSA_SHOP_ID}
      - YOOKASSA_SECRET_KEY=${YOOKASSA_SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
    volumes:
      - ./media:/app/media
      - ./staticfiles:/app/staticfiles
    networks:
      - foodplan-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
  
  db:
    image: postgres:14-alpine
    container_name: foodplan-db
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./backups:/backups
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-foodplan}
    networks:
      - foodplan-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
  
  redis:
    image: redis:7-alpine
    container_name: foodplan-redis
    restart: always
    volumes:
      - redis-data:/data
    networks:
      - foodplan-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
  
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile.nginx
    container_name: foodplan-nginx
    restart: always
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./media:/app/media
      - ./staticfiles:/app/staticfiles
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - web
    networks:
      - foodplan-network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
  
  backup:
    image: postgres:14-alpine
    container_name: foodplan-backup
    volumes:
      - ./backups:/backups
      - ./media:/media_backup
      - ./scripts:/scripts
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-foodplan}
      - BACKUP_KEEP_DAYS=${BACKUP_KEEP_DAYS:-7}
    entrypoint: ["/scripts/backup.sh"]
    depends_on:
      - db
    networks:
      - foodplan-network
    restart: "no"

volumes:
  postgres-data:
    name: foodplan-postgres-data
  redis-data:
    name: foodplan-redis-data

networks:
  foodplan-network:
    name: foodplan-network
    driver: bridge 