services:
  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Для доступа к панели управления Traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - traefik-public
  web:
    build:
      context: .
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.foodplan.rule=Host(`${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.foodplan.entrypoints=websecure"
      - "traefik.http.routers.foodplan.tls=true"
      - "traefik.http.services.foodplan.loadbalancer.server.port=8000"
    networks:
      - ${TRAEFIK_NETWORK}
      - foodplan-network
    depends_on:
      - db
      - redis

  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - foodplan-network

  redis:
    image: redis:7-alpine
    networks:
      - foodplan-network

networks:
  traefik-public:
    external: true
  foodplan-network:
    internal: true

volumes:
  postgres_data: 